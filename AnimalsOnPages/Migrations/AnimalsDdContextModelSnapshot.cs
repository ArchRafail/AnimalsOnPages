// <auto-generated />
using System;
using AnimalsOnPages.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimalsOnPages.Migrations
{
    [DbContext(typeof(AnimalsDdContext))]
    partial class AnimalsDdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimalsOnPages.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Building")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Building = 24,
                            City = "Ivano-Frankivsk",
                            Country = "Ukraine",
                            PostalCode = 76002,
                            Street = "Uhornytska str."
                        },
                        new
                        {
                            Id = 2,
                            Building = 18,
                            City = "Kherson",
                            Country = "Ukraine",
                            PostalCode = 24431,
                            Street = "Nezalezhnosti str."
                        },
                        new
                        {
                            Id = 3,
                            Building = 178,
                            City = "Odessa",
                            Country = "Ukraine",
                            PostalCode = 22905,
                            Street = "Peremohy blr."
                        },
                        new
                        {
                            Id = 4,
                            Building = 277,
                            City = "Krakiv",
                            Country = "Poland",
                            PostalCode = 10260,
                            Street = "Perelutsk str."
                        },
                        new
                        {
                            Id = 5,
                            Building = 143,
                            City = "Lodz",
                            Country = "Poland",
                            PostalCode = 11713,
                            Street = "Stratvens str."
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animal");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Zoos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Name = "Carpathian National Nature Park"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Name = "The country of Enotia"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Name = "Odesa Zoo"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Name = "Krakow Zoo"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Name = "Royal Lazenky"
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.ZooAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ZooId");

                    b.ToTable("ZooAnimal", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 3,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 4,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 1,
                            ZooId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 2,
                            ZooId = 2
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 3,
                            ZooId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 5,
                            ZooId = 3
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 2,
                            ZooId = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 3,
                            ZooId = 4
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 3,
                            ZooId = 5
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 4,
                            ZooId = 5
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 5,
                            ZooId = 5
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Amphibia", b =>
                {
                    b.HasBaseType("AnimalsOnPages.Models.Animal");

                    b.HasDiscriminator().HasValue("Amphibia");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CoverColor = "Green",
                            Name = "Frog",
                            Rank = "Herbivorous",
                            Sex = "Female",
                            Sound = "Kwa, kwa, kwa"
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Mammal", b =>
                {
                    b.HasBaseType("AnimalsOnPages.Models.Animal");

                    b.HasDiscriminator().HasValue("Mammal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverColor = "Grey",
                            Name = "Wolf",
                            Rank = "Carnivorous",
                            Sex = "Male",
                            Sound = "Owoo-oo-oo"
                        },
                        new
                        {
                            Id = 2,
                            CoverColor = "BrownBrown",
                            Name = "Bear",
                            Rank = "Carnivorous",
                            Sex = "Female",
                            Sound = "Ur-r-r"
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Reptile", b =>
                {
                    b.HasBaseType("AnimalsOnPages.Models.Animal");

                    b.HasDiscriminator().HasValue("Reptile");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CoverColor = "LightGrey",
                            Name = "Crocodile",
                            Rank = "Carnivorous",
                            Sex = "Male",
                            Sound = "Grunt, grunt, grunt"
                        },
                        new
                        {
                            Id = 4,
                            CoverColor = "LightGrey",
                            Name = "Turtle",
                            Rank = "Herbivorous",
                            Sex = "Female",
                            Sound = "Creek, creek, creek"
                        });
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Zoo", b =>
                {
                    b.HasOne("AnimalsOnPages.Models.Address", "Address")
                        .WithOne("Zoo")
                        .HasForeignKey("AnimalsOnPages.Models.Zoo", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AnimalsOnPages.Models.ZooAnimal", b =>
                {
                    b.HasOne("AnimalsOnPages.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimalsOnPages.Models.Zoo", "Zoo")
                        .WithMany()
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Zoo");
                });

            modelBuilder.Entity("AnimalsOnPages.Models.Address", b =>
                {
                    b.Navigation("Zoo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
